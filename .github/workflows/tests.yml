name: Tests

on:
  pull_request:
  push:
    paths-ignore:
      - "**.md"

jobs:
  tests:
    name: PHP ${{ matrix.php }} ${{ matrix.php-jit == 'on' && 'with' || 'without' }} JIT, Intl ext ${{ matrix.intl-ext == 'intl' && 'enabled' || 'disabled' }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.php == 'nightly' }}

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php:
          - 8.1
          - 8.2
          - 8.3
          - 8.4
        php-jit:
          - on
          - off
        intl-ext:
          - :intl
          - intl
        include:
          - os: ubuntu-latest
            php: nightly
            php-jit: on

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.intl-ext }}
          ini-values: zend.assertions=1, opcache.enable_cli=1, opcache.memory_consumption=256, opcache.jit=${{ matrix.php-jit == 'on' && 1255 || 'disable' }}, opcache.jit_buffer_size=${{ matrix.php-jit == 'on' && '256M' || '0' }}
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Cache test data
        uses: actions/cache@v4
        env:
          test-data-files: tests/data/unicode-idna-test-data
        with:
          path: ${{ env.test-data-files }}
          key: unicode-test-data-${{ hashFiles(env.test-data-files) }}
          restore-keys: unicode-test-data-

      - name: Install dependencies
        run: |
          if [[ '${{ matrix.php }}' == 'nightly' ]]; then
            composer update --no-interaction --ignore-platform-reqs
          else
            composer update --no-interaction
          fi

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

      - name: Run PHPCS
        run: vendor/bin/phpcs

      - name: Tests
        run: vendor/bin/phpunit

  tests-code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: :intl
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Cache test data
        uses: actions/cache@v4
        env:
          test-data-files: tests/data/unicode-idna-test-data
        with:
          path: ${{ env.test-data-files }}
          key: unicode-test-data-${{ hashFiles(env.test-data-files) }}
          restore-keys: unicode-test-data-

      - name: Install dependencies
        run: composer install

      - name: Tests with code coverage
        run: |
          mkdir -p ./build/coverage/
          vendor/bin/phpunit --coverage-clover ./build/coverage/clover.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/coverage/clover.xml
